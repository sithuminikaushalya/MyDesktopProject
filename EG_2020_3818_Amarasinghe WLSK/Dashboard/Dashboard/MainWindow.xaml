<Window x:Class="Dashboard.MainWindow"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Dashboard" 
        xmlns:Viewmodel="clr-namespace:Dashboard.ViewModel"
        mc:Ignorable="d"
        Title="Dashboard" 
        Height="691" 
        Width="1080"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent">

    <Window.DataContext>
        <Viewmodel:MainViewModel/>
    </Window.DataContext>


    <Window.Resources>

        <!--#region Button Visual Style-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="LightBlue"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="LightBlue"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#1f054d"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="LightBlue"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="LightBlue"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="LightBlue"/>
        <!--#endregion-->

        <!--#region Home Button Style-->
        <Style x:Key="HomeBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1f054d"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1f054d"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1f054d"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1f054d"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Profile Button Style-->
        <Style x:Key="ProfileBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1f054d"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1f054d"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1f054d"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1f054d"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Settings Button Style-->
        <Style x:Key="SettingsBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1f054d"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1f054d"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#1f054d"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#1f054d"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Close Button Style-->
        <Style x:Key="CloseBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#Datagrid Styles-->
        <Style x:Key="columnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="DarkBlue"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="cellStyle" TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Regular"/>
            <Setter Property="BorderBrush" Value="DarkBlue"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <Style x:Key="rowStyle" TargetType="DataGridRow">
            <Setter Property="Height" Value="50"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightBlue"/>
                    <Setter Property="Foreground" Value="DarkBlue"/>

                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="LightBlue"/>
                    <Setter Property="Foreground" Value="DarkBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="imageCellStyle" TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="DarkBlue"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <DataTemplate x:Key="imageCellTemplate">
            <Image Source="{Binding Image}" Width="50" Height="50" Stretch="Uniform"/>
        </DataTemplate>

        
       

    </Window.Resources>

    <Grid>

        <!--create a new grid-->
        <Grid Margin="20" Background="LightBlue">

            <!--add a shadow effect-->
            <Grid.Effect>
                <DropShadowEffect BlurRadius="30"
                                  ShadowDepth="2"
                                  Direction="-90"
                                  Color="Gray">
                </DropShadowEffect>
            </Grid.Effect>

            <!--add a stack panel to the left of the grid-->
            <StackPanel Width="96"
                        HorizontalAlignment="Left"
                        Background="MediumPurple">

                <!--add 3 buttons - add/edit/delete student-->

                <Button x:Name="Add"
                        Height="100"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Margin="0,180,0,20" Style="{DynamicResource HomeBtnStyle}" MouseEnter="Home_MouseEnter" MouseLeave="Home_MouseLeave" Command="{Binding AddStudentCommand}">

                    <!--add image-->
                    <Image Source="Assets/add-user.png"
                           Stretch="None" RenderTransformOrigin="1.988,0.591">
                    </Image>

                </Button>

                <Button x:Name="Edit"
                        Height="100"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Margin="0,0,0,10" Style="{DynamicResource ProfileBtnStyle}" MouseEnter="Profile_MouseEnter" MouseLeave="Profile_MouseLeave" Command="{Binding EditStudentCommand}">

                    <!--add image-->
                    <Image Source="Assets/edit-user.png"
                           Stretch="None">
                    </Image>

                </Button>

                <Button x:Name="Delete"
                        Height="100"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Margin="0,10,0,0" Style="{DynamicResource SettingsBtnStyle}" MouseEnter="Settings_MouseEnter" MouseLeave="Settings_MouseLeave" Command="{Binding DeleteCommand}">

                    <!--add image-->
                    <Image Source="Assets/delete-user.png"
                           Stretch="None">
                    </Image>

                </Button>

            </StackPanel>

            <!--add a header to the grid-->
            <Grid Height="121"
                  VerticalAlignment="Top"
                  Background="MediumPurple">

                <!--add a header title-->
                <TextBlock Text="Student Management System"
                           FontFamily="open sans condensed"
                           FontSize="26"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="#E0FFFF">
                </TextBlock>

                <!--add an exit button-->
                <Button Height="40"
                        Width="40"
                        Background="Transparent"
                        BorderThickness="0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        Margin="0,0,20,0" Style="{DynamicResource CloseBtnStyle}" Click="Button_Click">

                    <!--add image-->
                    <Image Source="Assets/logout.png"
                           Stretch="None" RenderTransformOrigin="-2.066,0.75">
                    </Image>

                </Button>

            </Grid>

            <!--add a footer-->
            <Grid Height="80"
                  VerticalAlignment="Bottom"
                  Background="LightBlue">
            </Grid>

            <!--add the popup user control-->
            <Popup x:Name="popup_uc"
                   AllowsTransparency="True"
                   HorizontalOffset="10"
                   VerticalOffset="10">

                <Grid>
                    <local:PopupUserControl x:Name="Header" Foreground="#E0FFFF"/>
                </Grid>
            </Popup>
            <DataGrid
                x:Name="DataGrid"
                IsReadOnly="true"
                AutoGenerateColumns="False"
                Background="Transparent"
                ItemsSource="{Binding Students,UpdateSourceTrigger=PropertyChanged}"
                SelectedItem="{Binding SelectedStudent,Mode=TwoWay}"
                RowDetailsVisibilityMode="VisibleWhenSelected"
                DataGridCell.GotFocus="DataGrid_CellGotFocus"
                Margin="138,191,0,119" HorizontalAlignment="Left" Width="869"
                ColumnHeaderStyle="{StaticResource columnHeaderStyle}"
                CellStyle="{StaticResource cellStyle}"
                RowStyle="{StaticResource rowStyle}"
                SelectionMode="Single">

                

                <DataGrid.Columns>
                  
                    <DataGridTextColumn
                                Header="FirstName"
                                MinWidth="150"
                                Width="*"
                                Binding="{Binding FirstName,UpdateSourceTrigger=PropertyChanged}"/>

                    <DataGridTextColumn
                                Header="LastName"
                                MinWidth="150"
                                Width="*"
                                Binding="{Binding LastName,UpdateSourceTrigger=PropertyChanged}"/>

                    <DataGridTemplateColumn Header="Image" MinWidth="150" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1" BorderBrush="Gray" Margin="5">
                                    <Image Width="50" Height="50" Source="{Binding Image, UpdateSourceTrigger=PropertyChanged}"
                               Stretch="Uniform"
                               Margin="5"/>
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellStyle>
                            <StaticResource ResourceKey="imageCellStyle"/>
                        </DataGridTemplateColumn.CellStyle>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn
                                Header="DOB"
                                MinWidth="150"
                                Width="*"
                                Binding="{Binding DateOfBirth,UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn
                                Header="GPA"
                                MinWidth="150"
                                Width="*"
                                
                                Binding="{Binding GPA,UpdateSourceTrigger=PropertyChanged}"/>
                </DataGrid.Columns>
            </DataGrid>
            <Button HorizontalAlignment="Left" Margin="851,126,0,0" VerticalAlignment="Top" Width="138" Height="40" Style="{StaticResource AddButton}" Command="{Binding AddStudentCommand}">
                <Button.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="LightBlue" Offset="0"/>
                        <GradientStop Color="DarkBlue" Offset="1"/>
                    </LinearGradientBrush>
                </Button.Background>
                <TextBlock Text="Add Student" Foreground="white" FontSize="16" FontWeight="Bold"/>
            </Button>

            <Button HorizontalAlignment="Left" Margin="832,585,0,0" VerticalAlignment="Top" RenderTransformOrigin="-0.278,0.701" Width="152" Height="38" Style="{StaticResource AddButton}" Command="{Binding DeleteCommand}">
                <Button.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="LightBlue" Offset="0"/>
                        <GradientStop Color="DarkBlue" Offset="1"/>
                    </LinearGradientBrush>
                </Button.Background>
                <TextBlock Text="Remove Student" Foreground="white" FontSize="16" FontWeight="Bold"/>
            </Button>

            <Button HorizontalAlignment="Left" Margin="666,585,0,0" VerticalAlignment="Top" Width="138" Height="39" Style="{StaticResource AddButton}" Command="{Binding EditStudentCommand}">
                <Button.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="LightBlue" Offset="0"/>
                        <GradientStop Color="DarkBlue" Offset="1"/>
                    </LinearGradientBrush>
                </Button.Background>
                <TextBlock Text="Edit Student" Foreground="white" FontSize="16" FontWeight="Bold"/>
            </Button>

        </Grid>
    </Grid>
</Window>
